import type { Content } from './cn';

export const content: Content = {
  header: {
    myAccountInfo: 'My Account',
    accountInfo: 'Account Info.',
    login: 'Login',
    anonymous: 'Guest',
    myPosts: 'My Posts',
    logout: 'Log out',
    exitCurrentPort: 'Exit Current Board',
  },
  join: {
    title: 'Login Port',
    seedInputPlaceholder: 'Input address to visit Port, Rum://',
    seedInputTooltip: 'Except Port boards below, you can use SeedNet address to visit other Rum BBS.',
    deletePrivateGroupTooltip: 'Do NOT show again',
    joinByAnonymous: 'Guest mode access',
    lastUsedMixinTooltip: 'Login with last Mixin account',
    lastUsedMixin: 'Last Mixin account:',
    lastUsedMixinClear: 'Clear cached Mixin account',
    lastUsedKeystoreTooltip: 'Login with last Keystore',
    lastUsedKeystore: 'Last keystore:',
    lastUsedKeystoreClear: 'Clear cached keystore',
    lastUsedMetaMaskTooltip: 'Login with last MetaMask account',
    lastUsedMetaMask: 'Last MetaMask :',
    lastUsedMetaMaskClear: 'Clear cached MetaMask',
    mixinTooltip: 'Login with Mixin account',
    mixin: 'Scan QR code with Mixin',
    keystoreTooltip: 'Create a Keystore to login',
    keystore: 'Create Keystore',
    metaMaskTooltip: 'Login with MetaMask',
    metaMask: 'Login with MetaMask',
    randomKeystoreTooltip: 'Create a random account to login',
    randomKeystore: 'Login with a random account',
    inputKeystoreTooltip: 'Input Keystore and password',
    inputKeystore: 'Input Keystore',
    more: 'Show more options',
    anonymous: 'Looking around (Guest mode)',
    back: 'Return',
    keystoreDialogTitle: 'Sign/Login',
    keystorePassword: 'Password',
    rememberPassword: 'Remember password',
    createNewKeystore: 'Create new Keystore',
    createNewKeystoreDone: 'Keystore created, keep Keystore and password safe, they can NOT be retrieved.',
    invalidKeystore: 'Wrong password or Keystore',
    loginFailed: 'Login failed',
    seedValidationFailedTitle: 'Error',
    invalidSeed: 'Seed parsing error',
    metaMaskPluginTip: 'Please install MetaMask browser-plugin',
    metaMaskPluginCancel: 'OK',
    metaMaskPluginInstall: 'Install Now',
    metaMaskInvalidAddress: 'Invalid address',
    deleteGroupTitle: 'Do NOT show this again',
    deleteGroupContent: 'Will no longer show this Port board (you can rejoin via SeedUrl). Continue?',
  },
  postlist: {
    latest: 'New',
    hotest: 'Hot',
    week: 'This Week',
    month: 'This Month',
    year: 'This Year',
    all: 'All Time',
    search: 'Search',
    searchPlaceholder: 'Search this board…',
    emptyTip: 'No post yet',
    noSearchResult: 'No search result',
  },
  post: {
    notFound: '404 No post found',
    backToPostList: 'Return to homepage',
    deleteButton: 'Delete Post',
    deleteTitle: 'Delete Post',
    deleteContent: 'Are you sure to delete this post?？',
    deleteSuccessTitle: 'Post Deleted',
    deleteSuccessContent: 'The post will be deleted after data synced.',
    urlCopied: 'Post URL is copied to clipboard',
  },
  comment: {
    emptyCommentTip: 'Comment here',
    maxLengthTip: (length: number) => `Maximum length: ${length}`,
    postComment: 'Post Comment',
    sortByLatest: 'Latest',
    sortByOldest: 'Oldest',
    commentCount: (n: number) => `${n} comments`,
    comment: 'Comment',
    writeAComment: 'No comment yet, be the first!',
    noComment: 'No comment yet',
    reply: 'Reply',
    replyTo: 'Reply To',
    replyingTo: 'Replying to',
    clearText: 'Clear',
    submit: 'Reply',
    commentInputPlaceholder: 'Write your comment here…',
    replyCount: (n: number) => `${n} replies`,
    waitForSync: 'Please wait for the reply to be synced',
  },
  profile: {
    heldedNFTs: (self: boolean) => `${self ? 'Mine' : 'Their'} NFT`,
    nftTransfer: 'NFT Trade/Exchange',
    editProfile: 'Edit profile',
    editSuccess: 'Edit succeed',
    joinAt: (time: string) => `Join at ${time}`,
    postCount: (n: number) => `${n} posts`,
    noPostYet: 'They have no post yet',
  },
  notification: {
    pageTitle: 'Notification',
    goToItem: 'Go to...',
    emptyTip: 'no notification yet',
    types: {
      postComment: 'commented your post',
      postLike: 'liked your post',
      postDislike: 'disliked your post',
      commentComment: 'replied you',
      commentLike: 'liked your comment',
      commentDislike: 'disliked your comment',
    },
    nft: {
      request: 'Request for NFT：',
      response: (approved: boolean, reply: string) => `Admin ${approved ? 'approved' : 'rejected'} your NFT request: ${reply}`,
    },
  },
  newPost: {
    pageTitle: 'New Post',
    postTitleInputPlaceholder: 'Post Title',
    postInputPlaceholder: 'Markdown supported',
    imageUploadFailed: 'Post failed (failed to upload image)',
    editSuccess: 'Edit succeed',
    submitSuccess: 'Post succeed',
    edit: 'Edit',
    new: 'Post',
    preview: 'Preview',
    cancelPreview: 'Quit preview',
    submitEdit: 'Submit changes',
    submit: 'Submit',
  },
  common: {
    confirm: 'Confirm',
    synced: 'Synced',
    sycing: 'Sycing',
    untitled: 'Untitled',
    imagePlaceholder: '[image]',
    like: 'Like',
    dislike: 'Dislike',
    loadMore: 'Load more',
    noMore: 'That\'s all',
    share: 'Share',
    underDev: 'This feature is under development',
    cancel: 'Cancel',
    submit: 'Submit',
    networkError: 'Network error',
  },
  portList: {
    joinedPorts: 'Boards Enabled',
    loginOrSignup: 'Login/Sign >',
    expand: 'Expand all',
    shrink: 'Hide unlogged',
  },
  groupCard: {
    postlist: 'Post Lists',
    newPost: 'Post New',
  },
  nftBox: {
    request: 'Request NFT',
    requestTitle: 'Request NFT aquired by boards',
    requestTip: 'More statement here...',
    requestSuccess: 'Request submitted',
    noNFT: 'No NFT for the board',
    reason: 'Statement',
  },
  footer: {
    about: 'About',
    howto: 'How to build my own Port？',
  },
  editImage: {
    title: 'Move or zoom',
  },
  editProfile: {
    title: 'Edit Profile',
    nickname: 'Nickname',
  },
  selectImage: {
    title: 'Insert image',
    selectImage: 'Select image',
    selectFromImageLib: 'Image resource online',
  },
  trxDetail: {
    title: 'Block Info',
    clickToCopy: 'Copy',
    copied: 'Copied',
    loadFailed: 'Failed to load data',
    copyData: 'Copy block info',
  },
  imageZoom: {
    fitImage: 'Fit size',
    shrink: 'Zoom out',
    restore: 'Restore',
    expand: 'Zoom in',
    rotateRight: 'Rotate',
  },
  imageLib: {
    keywords: 'Keywords',
    tip: 'Free images supported by Pixabay',
    noImages: [
      'No search result',
      'Try a different search term',
    ],
  },
  permission: {
    main: 'You do NOT hold NFT with post permission',
    comment: 'You do NOT hold NFT with comment permission',
    counter: 'No comment permission',
    profile: 'No profile permission',
    login: 'Please login first',
  },
  ago: {
    justNow: ' just now',
    minutesAgo: ' minutes ago',
    hoursAgo: ' hours ago',
  },
};
